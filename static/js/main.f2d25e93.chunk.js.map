{"version":3,"sources":["../node_modules/peerjs/dist sync","components/Room.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Room","useState","mediaStream","setStream","audio","setAudio","video","setVideo","user","setUser","videoRef","useRef","selfRef","setId","peer","Peer","config","iceServers","urls","username","credential","useEffect","on","call","navigator","mediaDevices","getUserMedia","then","stream","self","current","srcObject","play","answer","remoteStream","vid","catch","err","console","log","text","onCopy","alert","class","type","placeholder","onChange","target","value","ref","muted","onClick","getVideoTracks","forEach","element","enabled","getAudioTracks","getDisplayMedia","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2d25e93.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 53;","import React, { useEffect,useRef,useState } from 'react';\r\nimport Peer from 'peerjs'\r\n\r\nimport CopyToClipboard from'react-copy-to-clipboard'\r\n\r\nimport io from 'socket.io-client'\r\nconst Room =()=>{\r\n  const [mediaStream,setStream]=useState('')\r\n \r\nconst [audio,setAudio]=useState(true)\r\nconst [video,setVideo]=useState(true)\r\nconst [user,setUser]=useState('')\r\nconst videoRef=useRef(null)\r\nconst selfRef=useRef(null)\r\nconst[id,setId]=useState('')\r\n\r\n\r\n//peer-serv.glitch.me\r\n\r\nvar peer = new Peer({\r\n  config:{iceServers: [\r\n    {\r\n      urls: \"stun:openrelay.metered.ca:80\",\r\n    },\r\n    {\r\n      urls: \"turn:openrelay.metered.ca:80\",\r\n      username: \"openrelayproject\",\r\n      credential: \"openrelayproject\",\r\n    },\r\n    {\r\n      urls: \"turn:openrelay.metered.ca:443\",\r\n      username: \"openrelayproject\",\r\n      credential: \"openrelayproject\",\r\n    },\r\n    {\r\n      urls: \"turn:openrelay.metered.ca:443?transport=tcp\",\r\n      username: \"openrelayproject\",\r\n      credential: \"openrelayproject\",\r\n    },\r\n  ]}\r\n});\r\n\r\n\r\n  \r\n\r\nuseEffect(()=>{\r\n \r\n  peer.on('open', function(id) {\r\n    setId(id);\r\n  });\r\n  peer.on('call', function(call) {\r\n    \r\n  \r\n\r\n    navigator.mediaDevices\r\n    .getUserMedia({video:true,audio:true})\r\n    .then(stream => {\r\n      let self=selfRef.current\r\n      self.srcObject=stream\r\n      self.play()\r\n      setStream(stream)\r\n      call.answer(stream); // Answer the call with an A/V stream.\r\n      call.on('stream', function(remoteStream) {\r\n        // Show stream in some video/canvas element.\r\n        let vid=videoRef.current\r\n    vid.srcObject=remoteStream\r\n        vid.play()    \r\n      })\r\n    \r\n    \r\n    \r\n    \r\n    }).catch(err=>{\r\n    console.log(err)\r\n    })\r\n    })\r\n  \r\n  },[])\r\n\r\n\r\nconst play=()=>{\r\n  mediaStream.getVideoTracks().forEach(element => {\r\n    element.enabled=true\r\n  });\r\n}\r\n\r\nconst stop=()=>{\r\n  mediaStream.getVideoTracks().forEach(element => {\r\n    element.enabled=false\r\n  });\r\n}\r\nconst Aplay=()=>{\r\n  mediaStream.getAudioTracks().forEach(element => {\r\n    element.enabled=true\r\n  });\r\n}\r\n\r\nconst Astop=()=>{\r\n  mediaStream.getAudioTracks().forEach(element => {\r\n    element.enabled=false\r\n  });\r\n}\r\n\r\n\r\nconst call=()=>{\r\n  \r\n    navigator.mediaDevices\r\n  .getUserMedia({video:true,audio:true})\r\n  .then(stream => {\r\n    setStream(stream)\r\n    let self=selfRef.current\r\n    self.srcObject=stream\r\n    self.play()\r\n    var call = peer.call(user, stream);\r\n  call.on('stream', function(remoteStream) {\r\n\r\nvar vid=videoRef.current\r\nvid.srcObject=remoteStream\r\nvid.play()\r\n  })\r\n}).catch(err=>{\r\n  console.log(err)\r\n  })\r\n  \r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst share=()=>{\r\n\r\n  \r\n  navigator.mediaDevices\r\n.getDisplayMedia({video:true,audio:true})\r\n.then(stream => {\r\n  setStream(stream)\r\n  let self=selfRef.current\r\n  self.srcObject=stream\r\n  self.play()\r\n  var call = peer.call(user, stream);\r\ncall.on('stream', function(remoteStream) {\r\n\r\nvar vid=videoRef.current\r\nvid.srcObject=remoteStream\r\nvid.play()\r\n})\r\n}).catch(err=>{\r\nconsole.log(err)\r\n})\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  return(\r\n<div>\r\n  \r\n  <br/><br/><br/>\r\n  <center>\r\n    <div id='copy'>\r\n  <CopyToClipboard text={id} onCopy={()=>alert('copied')}>\r\n <span> {id} &nbsp;&nbsp;<i class=\"fa fa-clone\"></i> </span>\r\n        </CopyToClipboard>\r\n        </div>\r\n  <br/>\r\n <br/>\r\n<input id='in' type='text' placeholder=\"dial friend's id\" onChange={(e)=>setUser(e.target.value)}/><br/><br></br>\r\n\r\n <br/>\r\n<video id='video-out' ref={selfRef} muted></video><br/>\r\n <video id='video' ref={videoRef} ></video>\r\n <br/>\r\n <div id='fixed'><span id='i-2'>{video?<i class='fa fa-video-camera' id='call' onClick={()=>{stop();setVideo(false)}}></i>:<i class='fa fa-video-camera fa-2x' id='call' onClick={()=>{play();setVideo(true)}}/>}\r\n      </span>\r\n  <span id='i-2'>{audio?<i class='fa fa-microphone'  id='call' onClick={()=>{Astop();setAudio(false)}}></i>:<i class='fa fa-microphone-slash'  id='call' onClick={()=>{Aplay();setAudio(true)}}></i>}</span>\r\n  <span id='i-3'><i class='fa fa-arrow-up'   id='call' onClick={()=>{share()}}></i> </span>\r\n \r\n<span id='i-1'><i id='call' class='fa fa-phone' onClick={()=>call()}/></span>\r\n</div>\r\n  \r\n</center>\r\n\r\n</div>\r\n  )\r\n    \r\n  \r\n}\r\n\r\nexport default Room;\r\n","\r\nimport './App.css';\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\r\nimport Room from './components/Room';\r\n\r\nconst App = () => {\r\n return(\r\n   <div>\r\n     <nav id='header'>&nbsp;&nbsp;&nbsp;crypto-call </nav>\r\n<Router>\r\n<Route exact path='/' component={Room}/>\r\n  \r\n  \r\n  \r\n  \r\n\r\n</Router>\r\n   </div>\r\n )\r\n  \r\n};\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}